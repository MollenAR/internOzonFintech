// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/MollenAR/internOzonFintech/internal/shortUrl/model"
	mock "github.com/stretchr/testify/mock"
)

// ShortUrlUsecase is an autogenerated mock type for the ShortUrlUsecase type
type ShortUrlUsecase struct {
	mock.Mock
}

// GetOriginalUrl provides a mock function with given fields: crx, shortUrl
func (_m *ShortUrlUsecase) GetOriginalUrl(crx context.Context, shortUrl string) (model.GetOriginalUrlResponse, error) {
	ret := _m.Called(crx, shortUrl)

	var r0 model.GetOriginalUrlResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) model.GetOriginalUrlResponse); ok {
		r0 = rf(crx, shortUrl)
	} else {
		r0 = ret.Get(0).(model.GetOriginalUrlResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(crx, shortUrl)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveOriginalUrl provides a mock function with given fields: ctx, originalUrl
func (_m *ShortUrlUsecase) SaveOriginalUrl(ctx context.Context, originalUrl string) (model.SaveOriginalUrlResponse, error) {
	ret := _m.Called(ctx, originalUrl)

	var r0 model.SaveOriginalUrlResponse
	if rf, ok := ret.Get(0).(func(context.Context, string) model.SaveOriginalUrlResponse); ok {
		r0 = rf(ctx, originalUrl)
	} else {
		r0 = ret.Get(0).(model.SaveOriginalUrlResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, originalUrl)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
